{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xb96B0C54545D98731801BeD639D64A0fe9f9adeA",
    "txHash": "0x0aafecb1c1479f5410d2586b929fe91e72fbe103836738378ccb4c8110d932b6"
  },
  "proxies": [
    {
      "address": "0x633f48C3fC089baB93D4A06f310183F66dC50bd6",
      "txHash": "0x7632e2826724b36f43d4d603b3192c742c436b7423ff51686fed2e0909fc532d",
      "kind": "transparent"
    },
    {
      "address": "0x0093b303410D3003172F6A38F60A0998D5e7e9ef",
      "txHash": "0x54c5728f9cf76df8b69c5166d567c866c6f2a876ca85c1d16c571017da5c36e7",
      "kind": "transparent"
    },
    {
      "address": "0x2d5FDA94e4027E400Be45Bf8cb2e90528941464a",
      "txHash": "0xa6940de1567834d62fcf16ff20c59b45b2fc8c782fcff2f712edef6906532275",
      "kind": "transparent"
    },
    {
      "address": "0x8a0a33Ba9F8F6d717A1Ba20be03FA86cdD644812",
      "txHash": "0x00e01b3ccd49ac90956cf451fe2b6449ec13dd430db8fe2148f264739b119fc5",
      "kind": "transparent"
    },
    {
      "address": "0x289833B9716dE71b0170cdb6296460512a2266c4",
      "txHash": "0x3376cfda5a1e484f2a8a5afb098b09032c775d0ef80d366762cca6275a74ebb0",
      "kind": "transparent"
    },
    {
      "address": "0x200fe4c6f6466522A40dc5CbDDD4644e4240c47b",
      "txHash": "0x40a6eb77c3cefb754e70c3e4d74a3daa460421fe12e36542c5f8e70b732d52cc",
      "kind": "transparent"
    },
    {
      "address": "0x847d4188b9AcBdB773bA6Db7aFf8B4851421445a",
      "txHash": "0x902b2f985d926f25fae4419cf8caa9b1e0e90cd0e5774939bf6a8d0d2a73c021",
      "kind": "transparent"
    },
    {
      "address": "0xCb77841Ad73957028C97fdF6898aB107ED4ED4C5",
      "txHash": "0xe6db1555485f860116707c62bc0a62cd1cb834ab238fde7fa18f133da9838c0c",
      "kind": "transparent"
    },
    {
      "address": "0xf5e8F6c667E78a45DE1EAE058e5844a98C48C2c3",
      "txHash": "0x31b013d183b868a8a4626cbd3a4b2010516afb1e000db3b04ee14c9f0356965a",
      "kind": "transparent"
    },
    {
      "address": "0xB4Bc70AcAED1056290008fA03d087591bc045038",
      "txHash": "0x323836b916adf75a0bf46e0b65253b3634ed3a2f88ddd642f7a3a14046ae6c08",
      "kind": "transparent"
    },
    {
      "address": "0x0d7cF4e61Fe791f57Ab553DD9bDd15863CD4C4a5",
      "txHash": "0x70a0fc1099e8ba327302068f95c653168f8764742d580b4de1e2fb321e9d9473",
      "kind": "transparent"
    },
    {
      "address": "0x032eA61fc3C48491bC293BA57470Cd3EC44D64bb",
      "txHash": "0x310e7b7259cb4766a25471c326f989320ac0596e4351e2d01d319a8568b35c11",
      "kind": "transparent"
    },
    {
      "address": "0xF1777794C19Aafa6cEea1F0B3645DF9800c3dC01",
      "txHash": "0x21e416fd8b0e91babb230e0d0f99ba480f3fef911c03ebeab719a55cc8fe958f",
      "kind": "transparent"
    },
    {
      "address": "0xA41a442a1d64022dcd4fc0D82EAb3Acf2c7F4b0F",
      "txHash": "0xfb96eb7c4986b67e6f46f6feb8e55641baf5b0006e69ad12a25d7040ff8f6bac",
      "kind": "transparent"
    },
    {
      "address": "0x13ae4fBBaBb723674f529418DE84482DC800c719",
      "txHash": "0x7e123fc5377d23c80fc5092f2b5624b7c4e6c558ec11b8800b37216e67537a8d",
      "kind": "transparent"
    },
    {
      "address": "0xdFaf2c5BD49d099a064a9E45A059812045a0C973",
      "txHash": "0x5e29dab142101b4c32fd1fb2ee20edf6c5133ed6d7977c33222b8966ce57563f",
      "kind": "transparent"
    },
    {
      "address": "0x3Fa392d5106D302825aDf3782c9fa9BD04E3E183",
      "txHash": "0xdd9c7a297e0f9df5bdbec6b62d5ad1e57c54e5f20fab8b3061dae118fa1b3be8",
      "kind": "transparent"
    },
    {
      "address": "0x9278fd09C70f0cea540C24f964de602529aD114b",
      "txHash": "0xf0d12831b3474813baf1d289a806ce730254ea2ab48f7af3da493d6cbe1deda1",
      "kind": "transparent"
    },
    {
      "address": "0xC3935688b05A754C846Da64Df2bf48293044F845",
      "txHash": "0x7b36dfa2f9c25e8bce6c8baa7a20c3e971c4de2736d1ef35afafb77b3eea6fb5",
      "kind": "transparent"
    },
    {
      "address": "0xf94685ea74f65aCEBF1487B9d9462A4461dA0AB9",
      "txHash": "0xc3067c4b63e801e4d288a519b7b2b4855d9fe90d7260efc8fb621b554eef462b",
      "kind": "transparent"
    },
    {
      "address": "0xec5b3f436E50613c37318b91Bf28DC6c9C51743e",
      "txHash": "0xfcda87c8f96bcf665d85c53eae631811e1234127f99630069e3b6ffe655a0028",
      "kind": "transparent"
    },
    {
      "address": "0x32A853808936AE93Ec84a3cE4F6D1fBBd577EC3C",
      "txHash": "0x41c1576d7bf95edade2ec930699bcc4f8a8d6bba7bac7737f430fb0e5097105b",
      "kind": "transparent"
    },
    {
      "address": "0x8d881aFc955A9862cC70C71A6AD7af2d24377eC9",
      "txHash": "0xc5c1d5ecd06bf4ef754dc3661cddc3536724ba8459a29692e98b1efcac323db6",
      "kind": "transparent"
    },
    {
      "address": "0x6972aDEacC8f178d8CF2965112A3704e41F36FC2",
      "txHash": "0xe5f563d39532585949dd7e425093691459306eca872979e5022c217e44748c6b",
      "kind": "transparent"
    },
    {
      "address": "0x143785f58e3D63938ff0A47E33E405cd818df030",
      "txHash": "0x86bcfa5bdb9fec0ecd6988944f8f6578a91a4d6fb36cf5e94d4c41b4a3699fd2",
      "kind": "transparent"
    },
    {
      "address": "0x15E4e32F8a2C3A081850cF6e3b2d1dF88BdB14e6",
      "txHash": "0xf2a8a9f5436ef0dcb8bc14e06930633e0c96aba5c28cb179fc6961ed015d8104",
      "kind": "transparent"
    },
    {
      "address": "0xB682571cd7970f257D37Af461c7Df859eB2Be4Ae",
      "txHash": "0xec5cfd9d9cf0d5bf6ecda856d19c55c64f57a85332d7826bd30d2f2d5c8d71b7",
      "kind": "transparent"
    },
    {
      "address": "0xB2e4bC9F7e8626ab95Cb2a8a00ae3CdCb747C2B4",
      "txHash": "0x080ac964c49213f874f4f1255fa6e29eb343eeebc4bdccc06c8ddc6ca4293eeb",
      "kind": "transparent"
    },
    {
      "address": "0x6dee25741B4F6aDE7C6C17772cF58f0262d9B7Bf",
      "txHash": "0xbe1670e915c8a1afca24c30af2ecc837d40f23659f40f17e6c9d7b28ad05b279",
      "kind": "transparent"
    },
    {
      "address": "0x60B517235a0a495a1Ad527B8e946C71aafB80AB7",
      "txHash": "0xb30e56276baf6c8a207d6958480c8357ea1c09b1a8bf2350bd9da064883004d5",
      "kind": "transparent"
    },
    {
      "address": "0x2ee711994E026DD595cFa802360D501486ccC430",
      "txHash": "0x4cc8255be4933bcd08fc13daadba8574ed77e6c9ef331fc9de0418e8d9c96e22",
      "kind": "transparent"
    },
    {
      "address": "0x2e4ca33d840861a86db1e329F3186879589D2818",
      "txHash": "0xbb3c8cd486e5464e329a56be28d630a16b0e77cd7941c3046bdc23f365452a78",
      "kind": "transparent"
    },
    {
      "address": "0xB8071Daedd76dd642b789e395619D8e7D8Dc4CAc",
      "txHash": "0x0c0fe99aba3ad8abc09219dd10d722e62906545e290917e4593312b7a89fc699",
      "kind": "transparent"
    },
    {
      "address": "0xc5f87F3e97B3b5fC62BFCe37B0EA1541E790E6C3",
      "txHash": "0x9e1f8e3ed3ba941cc04db28aca203fdd3d7eab72d1c190fce5e20ba99d27bdce",
      "kind": "transparent"
    },
    {
      "address": "0xF4A78c5778687E09F5cceE6d59F075c5c5DE93e7",
      "txHash": "0xb722e1c9ede68b7e4153124f6e6314d47f674c475a9ecfc66025f1d5ebb09212",
      "kind": "transparent"
    },
    {
      "address": "0x949eC9c8F506D684BD747384067D093911b23ba6",
      "txHash": "0x0d1fdd7de7af1882b8a16ae1251f0318c42d4f2bb0adf23c32c12649468a5bdc",
      "kind": "transparent"
    },
    {
      "address": "0xB767451ca54687bf27Ba8a7723A7FE80C4331E1c",
      "txHash": "0xe7226ecbc3563f8d707308f00b78925bf2c58a12aaeaf8949661ed3fd622a23c",
      "kind": "transparent"
    },
    {
      "address": "0x29e1865111367971f62368213863603f97e420C6",
      "txHash": "0xa2f6263f792fd048589584472797341bfef0ddbbacb254bf8f0604a88c999abe",
      "kind": "transparent"
    },
    {
      "address": "0xf6879bE1887255D11Afe420b86a3677b7aBb32E1",
      "txHash": "0x19bf1640198f1f136a054c558f0bd775ffa18f706c2e808498aa6a647669f6d3",
      "kind": "transparent"
    },
    {
      "address": "0x26dd6d3c81026BEC05a6EaA9602e6aA08FdAC3c3",
      "txHash": "0x8d15f909f670deae2186c5c74a93026ca0582692df56d80d230face1d1860b8d",
      "kind": "transparent"
    },
    {
      "address": "0x9579dBA78080E3CF5bfA70eE9d694539A0F02ebe",
      "txHash": "0x2c049b39bc9c3bbb00070bf875563d9c373dba01cbc40231f807e49c61c886cb",
      "kind": "transparent"
    },
    {
      "address": "0x48e5641Da9eD30149D5Cf8958eB8BCc6d16430B9",
      "txHash": "0xa2cfd6fb57bae73638b3aa7b954add180e487c8474968d185a1541ccf2c96168",
      "kind": "transparent"
    },
    {
      "address": "0xb5dcc5C2e8b67BE7136711A4DC6B8db33BB8de07",
      "txHash": "0x7075cce331506a3817679e70d5d2241df9649f19c63e1fc124b35a4dea1cf519",
      "kind": "transparent"
    },
    {
      "address": "0x5C013042E463072794Cc0ae22D1a7B7dBb23bF91",
      "txHash": "0xc5c2049f4f35414cfafb7ddfe4f63989b33657df4b768b6b8f1b59c1116918be",
      "kind": "transparent"
    },
    {
      "address": "0x991852AD9742c606567F73E361f6759Bb199ffB7",
      "txHash": "0x3413677bcd1268a78ae13e056c1e78089e39d0b4527ee7a9619ad91e40beeb2c",
      "kind": "transparent"
    },
    {
      "address": "0x9Ff289d5819ac69da3b80a9191D4e9F10CAD8972",
      "txHash": "0xa72f2e827034286c2a9261ece48ee3a6c6af020077204856c086ede381620311",
      "kind": "transparent"
    },
    {
      "address": "0xa8c1b75B694E7fa396d3885b1f18698dD78AeA5f",
      "txHash": "0x9b44843fe64cfb826e554fb89855a9be16779eb39f84acbbbc264fa9559bfc3d",
      "kind": "transparent"
    },
    {
      "address": "0x054A48ecb1765CeEc23331010652C3c459B90AFc",
      "txHash": "0x7b89be4250a597ca7d6f5f0b1574a9ef5ecb6476cb24f05384ada3f738684172",
      "kind": "transparent"
    },
    {
      "address": "0xA8D72a769f9BF322ccd6564B1645e238b17835F6",
      "txHash": "0x0c6379ec755e62c6007e65addce9c68c894786a07f431f44fe09aef325326614",
      "kind": "transparent"
    },
    {
      "address": "0xF3c36D3E410bc94eAB6105Ef5282A996517a49EF",
      "txHash": "0x0b723eff8d0914c2532c4eb818cef49932e0422c98c217675cf3154f0c06d99a",
      "kind": "transparent"
    },
    {
      "address": "0xe4986675AB0761b4934Ef4BbFDFefbcA8911F1Ae",
      "txHash": "0xd9e199aa05a2b222fda424d1ed346db8919be92dc962eef26991ecdeb8832490",
      "kind": "transparent"
    },
    {
      "address": "0xA588fBC77C7b3744b055E8ebe3B2DeEE5Bb94EeD",
      "txHash": "0x5b74a961eba0f804c9090ebd70137c25c211c6b0be572816010f13a87b96bc73",
      "kind": "transparent"
    },
    {
      "address": "0x78Ae902da5609cFe11203e817c1928519743B565",
      "txHash": "0x18bc868d8e8e70b6101e93fe66fed480d005a0613ff261420ce34faf5dd82c1c",
      "kind": "transparent"
    },
    {
      "address": "0x1fbA22c5fa1334D9E16f19A28008E73b216dD889",
      "txHash": "0x03991807869abb30089332e7c0a46ce1eafa1dbb3f3340912fe415c141d4018f",
      "kind": "transparent"
    },
    {
      "address": "0x34541a01170a5e106D25aCB307132A1A58283B45",
      "txHash": "0xc22d29bb18b58936b18bd2b81ec095d68257b1c92038eb3144f7c40516996119",
      "kind": "transparent"
    },
    {
      "address": "0x07A37B8E1368368A3bC77cE97cDCe33a0010FD0c",
      "txHash": "0xb842c31e7bf405786ae5ee25eea7912ea66619d749370cb92356cfdbc8c17349",
      "kind": "transparent"
    },
    {
      "address": "0xf2c8a8313811F235Dd8DAC794327821028eE9C86",
      "txHash": "0x8d9bcbcffd5acd11690dac8da1d0db283bb36257bfd4097c41756dabc4304fc1",
      "kind": "transparent"
    },
    {
      "address": "0xD850F949b4331EA083ff8d6006668E4a55bA33Fb",
      "txHash": "0xa7ac8aa2edf8b0d913a2f8bad3274eed0312eea3f9a18b22e54de2d75c38930c",
      "kind": "transparent"
    },
    {
      "address": "0xF5EcEb0E983Ba5f09f1b318C44E8D0D3732429df",
      "txHash": "0x69fd33fe46dcc266beb02a9f1563df6859d3569820a0614e9255ab325c2123a2",
      "kind": "transparent"
    },
    {
      "address": "0x48b52444AF79Fbea5Cf1BE9Fb548289E4c2F2880",
      "txHash": "0xc17f2fcd416fff05e57b31899aca9e8a42d77a4c8472f55114aafc25ae0ad984",
      "kind": "transparent"
    },
    {
      "address": "0x7533d14C712d758B753E2f9D75fDbfd7d499bc31",
      "txHash": "0xe9dc0068c41555d4ce77f9311aa44f1309ca8fc60ba2c8c5db20ef58564db730",
      "kind": "transparent"
    },
    {
      "address": "0x5dC1EaC5ca949e27B723bB65C4525beF46c9d9F4",
      "txHash": "0x2633b6240e6ada89c1ecec00db14a9f1662ad48fe096066d361c16eba6ba20f0",
      "kind": "transparent"
    },
    {
      "address": "0x52D60C66F7310310e65d4530A843236F6E28a31B",
      "txHash": "0x1a4763ced648312f7855c89e1e000e83abbabae6b35f132206a74431733ffc0d",
      "kind": "transparent"
    },
    {
      "address": "0xa9b75895789f7867043d27F74cc8BF69000af655",
      "txHash": "0xa4d5eaac52c2ec644bfe1e38b4ac3ed3ba16d25648be9b535a936edb7f36e165",
      "kind": "transparent"
    },
    {
      "address": "0x6f41D2311848132AD6fa4B810B364296743Af100",
      "txHash": "0x6880e9182a507fad7ef05045b54622cc99630aa98e7232660bfd3255dcbfc0b1",
      "kind": "transparent"
    },
    {
      "address": "0x81890EbB2D0d62826233bDa4Ea18b506f44b748f",
      "txHash": "0x62062231fef14940a34e00092b0773e4627162098d7b43a96bf6b0ebfd4abafd",
      "kind": "transparent"
    },
    {
      "address": "0x787738eEAc4eC9Bf283f7216E691D932991915eF",
      "txHash": "0x3d1a8c81fb1fb570624932427d635918a815e7dd7213264283de64259de33e90",
      "kind": "transparent"
    },
    {
      "address": "0xa579F2F6b6F41942194c35E20701BE658BD84e4b",
      "txHash": "0x8a134046fb304c679b23377778ab453059b393330c275d352d9bbe971db3fe1b",
      "kind": "transparent"
    },
    {
      "address": "0xd38038590df611e4243b2F48F60cde5682F7DB94",
      "txHash": "0x3c1941e9d9c2eca4e927e1b55bdba143af8b3a386dccfd4c5e556e32d315fc88",
      "kind": "transparent"
    },
    {
      "address": "0xF4b4f2683AaF343063b375A66C95dcB576b2625F",
      "txHash": "0xcd1ac51e31f3667204281a7aa4abbe3495f1a0debb90997a7e022192cf173b8d",
      "kind": "transparent"
    },
    {
      "address": "0xD071C3A9Ee0926f07D85D6eCC5Bf75d43D8b89BE",
      "txHash": "0x7b2ae0769b9924e6dc3ecb390d9ab097086c9a52248467e0be5c091b8c95b38d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "cb54df7d0ec3cb0fb773ca03ca72f5061846b72b822c2df02fc1492782f508ea": {
      "address": "0xA02E7875Ff731dE01694044432091e9E80188d37",
      "txHash": "0xd95fdf1f9de7e515909fd8572b424db34b97f499e9ab3efa3aa974b2ea00a16b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Metal",
            "src": "contracts/other/Metal.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e5868e571cb7acd5348f2aa69f668b03338fde3c7f014082a7d16928908f11f7": {
      "address": "0x850403742d128455125B4Ee76d1f2887425A8f3b",
      "txHash": "0x7adf4953983fbc4d53e5e14a281ab4cb6a92bcedd2ccd24e53483daa24634a8f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Crystal",
            "src": "contracts/other/Crystal.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bd1f9c8f63136bb7a56aeab18c88c27a975d0c57dc296536680c2da46fde015e": {
      "address": "0xbC05Fd2928821eBEc2396F137E20c2c91cB23f1F",
      "txHash": "0xf07b0a0dc67f31e6e10d947ba5cb6ce1daa22a6c9e0b406c567338b9124ef84c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Ethereus",
            "src": "contracts/other/Ethereus.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ba7e8f4ab7f7203bc8581691eb9020fb8f2f85f3887a0cc8d111d6b7c343fe3e": {
      "address": "0x257310c403c9d61785ee0272B8A09e05339FD0e9",
      "txHash": "0xa16b8abb448bbcb1948d91f4de1625931ecb900852b174c644a7172c0ea67bcc",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:30"
          },
          {
            "label": "planets",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(Planet)13623_storage)",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:32"
          },
          {
            "label": "fleets",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:34"
          },
          {
            "label": "buildings",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:37"
          },
          {
            "label": "boosts",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:39"
          },
          {
            "label": "lastClaimed",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:41"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "257",
            "type": "t_string_storage",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:43"
          },
          {
            "label": "runningAttacks",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_struct(attackStatus)13641_storage)dyn_storage",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(attackStatus)13641_storage)dyn_storage": {
            "label": "struct Planets.attackStatus[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Planet)13623_storage)": {
            "label": "mapping(uint256 => struct Planets.Planet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Planet)13623_storage": {
            "label": "struct Planets.Planet",
            "members": [
              {
                "label": "coordinateX",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "coordinateY",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ethereus",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "metal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "crystal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "pvpEnabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 1,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(attackStatus)13641_storage": {
            "label": "struct Planets.attackStatus",
            "members": [
              {
                "label": "attackStarted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "distance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timeToBeResolved",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fromPlanet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "toPlanet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "attackerShipsIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "attacker",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "attackInstanceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "28a0574b1d8bfd65a82eb6d5ea605f42ab8daf56fd245bde58f9819c254edc00": {
      "address": "0xDB869208d70cA4E57f2a1AC8197a5BE412A48EA9",
      "txHash": "0x3fdf1f80a7079b77f3548e23cce4719545fc9e8f254fa7759286d26f41fef0d6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:30"
          },
          {
            "label": "planets",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(Planet)2406_storage)",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:32"
          },
          {
            "label": "fleets",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:34"
          },
          {
            "label": "buildings",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:37"
          },
          {
            "label": "boosts",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:39"
          },
          {
            "label": "lastClaimed",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:41"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "257",
            "type": "t_string_storage",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:43"
          },
          {
            "label": "runningAttacks",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_struct(attackStatus)2424_storage)dyn_storage",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(attackStatus)2424_storage)dyn_storage": {
            "label": "struct Planets.attackStatus[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Planet)2406_storage)": {
            "label": "mapping(uint256 => struct Planets.Planet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Planet)2406_storage": {
            "label": "struct Planets.Planet",
            "members": [
              {
                "label": "coordinateX",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "coordinateY",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ethereus",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "metal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "crystal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "pvpEnabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 1,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(attackStatus)2424_storage": {
            "label": "struct Planets.attackStatus",
            "members": [
              {
                "label": "attackStarted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "distance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timeToBeResolved",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fromPlanet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "toPlanet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "attackerShipsIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "attacker",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "attackInstanceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bd5529eb5d619ebf76ab1296a3b3c56d49d130ef300c5542d23564f37ebf4e5c": {
      "address": "0xaf8506e8Dc7C87378b1fA4A3D11fDD9E8C52a772",
      "txHash": "0x6f52ae984e29cf2c4de77a13843742ac16cfaeec7682c36ea8ae547a63e90c13",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:9"
          },
          {
            "label": "SpaceShips",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(ShipType)14285_storage)",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:30"
          },
          {
            "label": "assignedPlanet",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:33"
          },
          {
            "label": "shipType",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_struct(ShipType)14285_storage)",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:36"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(ShipModule)14290_storage)dyn_storage": {
            "label": "struct Ships.ShipModule[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ShipType)14285_storage)": {
            "label": "mapping(uint256 => struct Ships.ShipType)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ShipModule)14290_storage": {
            "label": "struct Ships.ShipModule",
            "members": [
              {
                "label": "attackBoostStat",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "healthBoostStat",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ShipType)14285_storage": {
            "label": "struct Ships.ShipType",
            "members": [
              {
                "label": "shipType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cargo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "craftTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "craftedFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "moduleSlots",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "equippedShipModule",
                "type": "t_array(t_struct(ShipModule)14290_storage)dyn_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cceab9cb337bc738be1fc62a83d21783bab73ce489ce6a65eb53549a5bbed11a": {
      "address": "0x4D07aE720Dd21D9fe8EC4775d3BE60038a5BB202",
      "txHash": "0xe4e52a84e64ef93a3d0344a92071464eaf4cfdd3b26957dbf642553b4015f30c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Buildings",
            "src": "contracts/other/Buildings.sol:9"
          },
          {
            "label": "buildings",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(Building)13261_storage)",
            "contract": "Buildings",
            "src": "contracts/other/Buildings.sol:21"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "Buildings",
            "src": "contracts/other/Buildings.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Building)13261_storage)": {
            "label": "mapping(uint256 => struct Buildings.Building)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Building)13261_storage": {
            "label": "struct Buildings.Building",
            "members": [
              {
                "label": "price",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "boosts",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "craftTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7a17dbe3a5c334cd3fbccab1105909c839967445d18fda8747fc897d762d671e": {
      "address": "0xDe0bbd0e9a66AE8E43c0c147Da0A8313788fF780",
      "txHash": "0x2b8be8cd4337a2c3538fc424ec5aaecc65aeef50fc5fabb5e1bac2c3137cf389",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:30"
          },
          {
            "label": "planets",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(Planet)2406_storage)",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:32"
          },
          {
            "label": "fleets",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:34"
          },
          {
            "label": "buildings",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:37"
          },
          {
            "label": "boosts",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:39"
          },
          {
            "label": "lastClaimed",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:41"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "257",
            "type": "t_string_storage",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:43"
          },
          {
            "label": "runningAttacks",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_struct(attackStatus)2424_storage)dyn_storage",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(attackStatus)2424_storage)dyn_storage": {
            "label": "struct Planets.attackStatus[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Planet)2406_storage)": {
            "label": "mapping(uint256 => struct Planets.Planet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Planet)2406_storage": {
            "label": "struct Planets.Planet",
            "members": [
              {
                "label": "coordinateX",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "coordinateY",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ethereus",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "metal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "crystal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "pvpEnabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 1,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(attackStatus)2424_storage": {
            "label": "struct Planets.attackStatus",
            "members": [
              {
                "label": "attackStarted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "distance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timeToBeResolved",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fromPlanet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "toPlanet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "attackerShipsIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "attacker",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "attackInstanceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a35d29d72877a30b323de9d80c9927b312e6786029e7a368b63bb5ebbd0a8e48": {
      "address": "0x1C1c5500B8509a6DdbC2aa82c451c9bAe5AbEa91",
      "txHash": "0x1c6edbb16a598ee3bfe26e877f7cbe3b66e656ded32b82cef1b00a42b644649b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Metal",
            "src": "contracts/other/Metal.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8badbbd4cb479a35912ba46d7100e809e9eb1f4aeaa95a0bf1647a32c6cac75e": {
      "address": "0x7A28364EC7741b2413ca503D99B2e2547849Bb5C",
      "txHash": "0xc5b4d778338d6a14830b072adf95ec260198335c33a90dd325ac1f2999ff6889",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Crystal",
            "src": "contracts/other/Crystal.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fd99a5aba296686054c4973da223855214aeb9023e90f4857ce1d4d8024cdaaa": {
      "address": "0x30c0B6E6CC3c50B3555E4BfF52F20fA310237174",
      "txHash": "0xe60bffd6945ad26ff8c2ea0caf07ce30b9994c3c37ca11e9d87d32c8aac9e313",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Ethereus",
            "src": "contracts/other/Ethereus.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d72693d84c4188ecec28efc218e7be18b653e8145b9049ee9c03907b0f5f2ef9": {
      "address": "0x3dBFE940F51f3D1e0d907770CB123022f523F8c2",
      "txHash": "0xadb511ded734da3fe8103e0a1f9025920370ec118935eba457bcac35fdb70dd5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:31"
          },
          {
            "label": "planets",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(Planet)2406_storage)",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:33"
          },
          {
            "label": "fleets",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:35"
          },
          {
            "label": "buildings",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:38"
          },
          {
            "label": "boosts",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:40"
          },
          {
            "label": "lastClaimed",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:42"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "257",
            "type": "t_string_storage",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:44"
          },
          {
            "label": "runningAttacks",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_struct(attackStatus)2427_storage)dyn_storage",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(attackStatus)2427_storage)dyn_storage": {
            "label": "struct Planets.attackStatus[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Planet)2406_storage)": {
            "label": "mapping(uint256 => struct Planets.Planet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Planet)2406_storage": {
            "label": "struct Planets.Planet",
            "members": [
              {
                "label": "coordinateX",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "coordinateY",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ethereus",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "metal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "crystal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "pvpEnabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 1,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(attackStatus)2427_storage": {
            "label": "struct Planets.attackStatus",
            "members": [
              {
                "label": "attackStarted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "distance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timeToBeResolved",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fromPlanet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "toPlanet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "attackerShipsIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "attacker",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "attackInstanceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "attackSeed",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3071b727385916fc462c0df047dea78514508cef1ca7b4b02573e1de32052670": {
      "address": "0x351Ff0e21eF7e4132D105aE31CA07543437Fa5fB",
      "txHash": "0x0e201edfcff5b635133ef8aefe957666929bf7fe56959bc874420b703ad1fece",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:11"
          },
          {
            "label": "SpaceShips",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(ShipType)2693_storage)",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:32"
          },
          {
            "label": "assignedPlanet",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:35"
          },
          {
            "label": "shipType",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_struct(ShipType)2693_storage)",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:38"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(ShipModule)2698_storage)dyn_storage": {
            "label": "struct Ships.ShipModule[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ShipType)2693_storage)": {
            "label": "mapping(uint256 => struct Ships.ShipType)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ShipModule)2698_storage": {
            "label": "struct Ships.ShipModule",
            "members": [
              {
                "label": "attackBoostStat",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "healthBoostStat",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ShipType)2693_storage": {
            "label": "struct Ships.ShipType",
            "members": [
              {
                "label": "shipType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cargo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "craftTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "craftedFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "moduleSlots",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "equippedShipModule",
                "type": "t_array(t_struct(ShipModule)2698_storage)dyn_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3e0d25b741eb7b4f9b7250b07fd7e2529045146b03471b504b2a3da79edb2d0e": {
      "address": "0x831AA085145795d962F4836B970354ad8284d305",
      "txHash": "0x3801fe64ee3fa9cc9fb4f8d68e030c90df71c29d29148019bb6e759fd093e06a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Buildings",
            "src": "contracts/other/Buildings.sol:9"
          },
          {
            "label": "buildings",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(Building)16586_storage)",
            "contract": "Buildings",
            "src": "contracts/other/Buildings.sol:21"
          },
          {
            "label": "totalBuildingTypes",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Buildings",
            "src": "contracts/other/Buildings.sol:22"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "Buildings",
            "src": "contracts/other/Buildings.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Building)16586_storage)": {
            "label": "mapping(uint256 => struct Buildings.Building)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Building)16586_storage": {
            "label": "struct Buildings.Building",
            "members": [
              {
                "label": "price",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "boosts",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "craftTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "595358b74afc93df6f98d131ed71b039f5bb1cf244bc4d90693690887e83034b": {
      "address": "0xCdEd5CDA5b4C4fB861fa00a2D7C3dc48f812dDDd",
      "txHash": "0x15e5d14a05d6102866617736da55b712edbecb8ff73163999414685b31314d43",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:31"
          },
          {
            "label": "planets",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(Planet)8622_storage)",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:33"
          },
          {
            "label": "fleets",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:35"
          },
          {
            "label": "buildings",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:38"
          },
          {
            "label": "boosts",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:40"
          },
          {
            "label": "lastClaimed",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:42"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "257",
            "type": "t_string_storage",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:44"
          },
          {
            "label": "runningAttacks",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_struct(attackStatus)8643_storage)dyn_storage",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(attackStatus)8643_storage)dyn_storage": {
            "label": "struct Planets.attackStatus[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Planet)8622_storage)": {
            "label": "mapping(uint256 => struct Planets.Planet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Planet)8622_storage": {
            "label": "struct Planets.Planet",
            "members": [
              {
                "label": "coordinateX",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "coordinateY",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ethereus",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "metal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "crystal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "pvpEnabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 1,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(attackStatus)8643_storage": {
            "label": "struct Planets.attackStatus",
            "members": [
              {
                "label": "attackStarted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "distance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timeToBeResolved",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fromPlanet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "toPlanet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "attackerShipsIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "attacker",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "attackInstanceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "attackSeed",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "61368974e84cab4fba36f7b86fd5b91d297458bb2d3d5f80a4d55b1d9cfd8705": {
      "address": "0xFeC5Fdbd083fac868a4E46008cbe7D8C317837B6",
      "txHash": "0x12c0215347a73c4f9bd2367d5321062347ced011138bfb5d1c1636cded284a57",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Ethereus",
            "src": "contracts/other/Ethereus.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "92a5782be54e4113860bbe75c719f8febe99d633d91f90be9d73ba66c3a31505": {
      "address": "0x6940BC25A6EbD7A33169D00Cb755f16f2d7b9C3f",
      "txHash": "0xc16891a92b7112e2949da19bce5fa8d395909f17e89cda574a50452e34094912",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:31"
          },
          {
            "label": "planets",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(Planet)18666_storage)",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:33"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:35"
          },
          {
            "label": "runningAttacks",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_struct(attackStatus)18687_storage)dyn_storage",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(attackStatus)18687_storage)dyn_storage": {
            "label": "struct Planets.attackStatus[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Planet)18666_storage)": {
            "label": "mapping(uint256 => struct Planets.Planet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Planet)18666_storage": {
            "label": "struct Planets.Planet",
            "members": [
              {
                "label": "coordinateX",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "coordinateY",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ethereus",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "metal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "crystal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "pvpEnabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 1,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(attackStatus)18687_storage": {
            "label": "struct Planets.attackStatus",
            "members": [
              {
                "label": "attackStarted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "distance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timeToBeResolved",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fromPlanet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "toPlanet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "attackerShipsIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "attacker",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "attackInstanceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "attackSeed",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ff87dd0156a012153bbcc933045ad8be05fa12b006f7f587794cc6c251c7aaaf": {
      "address": "0x06C97E3dB365f93023fFB3e56e41cdE2E360A1aB",
      "txHash": "0xdeba23d770e35d61ce05dbe29633054ffbdf13798c563bd2c17b25b9e6616fb2",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:11"
          },
          {
            "label": "SpaceShips",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(ShipType)19522_storage)",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:32"
          },
          {
            "label": "assignedPlanet",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:35"
          },
          {
            "label": "shipType",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_struct(ShipType)19522_storage)",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:38"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(ShipModule)19527_storage)dyn_storage": {
            "label": "struct Ships.ShipModule[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ShipType)19522_storage)": {
            "label": "mapping(uint256 => struct Ships.ShipType)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ShipModule)19527_storage": {
            "label": "struct Ships.ShipModule",
            "members": [
              {
                "label": "attackBoostStat",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "healthBoostStat",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ShipType)19522_storage": {
            "label": "struct Ships.ShipType",
            "members": [
              {
                "label": "shipType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cargo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "craftTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "craftedFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "moduleSlots",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "equippedShipModule",
                "type": "t_array(t_struct(ShipModule)19527_storage)dyn_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bb7bf13d106477e6c7f33ad54ff8b670f5620e0f71a92c0ed810a5a7d7b25142": {
      "address": "0x28cDBe50ABCC9f31585e48d29FA7Dc70254Eb0fe",
      "txHash": "0xe70cb4edb8dd6ed875d37a4bdd90160dc8f3bd4d5f428305308f09858abb121c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Buildings",
            "src": "contracts/other/Buildings.sol:9"
          },
          {
            "label": "buildings",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(Building)17821_storage)",
            "contract": "Buildings",
            "src": "contracts/other/Buildings.sol:21"
          },
          {
            "label": "totalBuildingTypes",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Buildings",
            "src": "contracts/other/Buildings.sol:22"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "Buildings",
            "src": "contracts/other/Buildings.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Building)17821_storage)": {
            "label": "mapping(uint256 => struct Buildings.Building)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Building)17821_storage": {
            "label": "struct Buildings.Building",
            "members": [
              {
                "label": "price",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "boosts",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "craftTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c778dfd26dd3facfe0b452818e6614a0778f51018ff8dcacbf07fd5b4be6d92c": {
      "address": "0x7308DB319d1155150c0578Ed24965D82077d042D",
      "txHash": "0xeb0f4dd52c418f5d995aaafd48b971658a3f2655c3e67643c064cab70a401da3",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Planets",
            "src": "contracts\\other\\Planets.sol:31"
          },
          {
            "label": "planets",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(Planet)20482_storage)",
            "contract": "Planets",
            "src": "contracts\\other\\Planets.sol:33"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "Planets",
            "src": "contracts\\other\\Planets.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Planet)20482_storage)": {
            "label": "mapping(uint256 => struct Planets.Planet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Planet)20482_storage": {
            "label": "struct Planets.Planet",
            "members": [
              {
                "label": "coordinateX",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "coordinateY",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ethereus",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "metal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "crystal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "pvpEnabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 1,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "749d4a24b494ad9bc4ea4623c5112c37b9f8399f7f8c51c2cb1db9f2fb1e80df": {
      "address": "0xA6d5742eae0809522185B07B675BaE742457c0Aa",
      "txHash": "0xe68ef91f3b8054d6a6e94d73cc995088a503fbea5ad3500eb2345e993a332974",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Ships",
            "src": "contracts\\other\\Ships.sol:11"
          },
          {
            "label": "SpaceShips",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(ShipType)12437_storage)",
            "contract": "Ships",
            "src": "contracts\\other\\Ships.sol:36"
          },
          {
            "label": "assignedPlanet",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Ships",
            "src": "contracts\\other\\Ships.sol:39"
          },
          {
            "label": "shipType",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_struct(ShipType)12437_storage)",
            "contract": "Ships",
            "src": "contracts\\other\\Ships.sol:42"
          },
          {
            "label": "shipModuleType",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_struct(ShipModule)12454_storage)",
            "contract": "Ships",
            "src": "contracts\\other\\Ships.sol:44"
          },
          {
            "label": "equippedShipModuleType",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(ShipModule)12454_storage))",
            "contract": "Ships",
            "src": "contracts\\other\\Ships.sol:47"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "257",
            "type": "t_string_storage",
            "contract": "Ships",
            "src": "contracts\\other\\Ships.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(ShipModule)12454_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Ships.ShipModule))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ShipModule)12454_storage)": {
            "label": "mapping(uint256 => struct Ships.ShipModule)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ShipType)12437_storage)": {
            "label": "mapping(uint256 => struct Ships.ShipType)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ShipModule)12454_storage": {
            "label": "struct Ships.ShipModule",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "attackBoostStat",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "defenseBoostStat",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "healthBoostStat",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "price",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(ShipType)12437_storage": {
            "label": "struct Ships.ShipType",
            "members": [
              {
                "label": "shipType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "attackTypes",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "defenseTypes",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "cargo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "craftTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "craftedFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "moduleSlots",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              }
            ],
            "numberOfBytes": "544"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ae1f249c1ca5d73565caeb0226975fb07cf1fa7b57ae13ad1eaaf901b68755c0": {
      "address": "0x076437f3d195132834950Fc7165C7205E04d8ba3",
      "txHash": "0x8f9610ba9063784621dc12dbe29dd067611c9b89e65c893afca70886a2ffaf6e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Buildings",
            "src": "contracts\\other\\Buildings.sol:9"
          },
          {
            "label": "buildings",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(Building)11406_storage)",
            "contract": "Buildings",
            "src": "contracts\\other\\Buildings.sol:21"
          },
          {
            "label": "totalBuildingTypes",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Buildings",
            "src": "contracts\\other\\Buildings.sol:22"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "Buildings",
            "src": "contracts\\other\\Buildings.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Building)11406_storage)": {
            "label": "mapping(uint256 => struct Buildings.Building)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Building)11406_storage": {
            "label": "struct Buildings.Building",
            "members": [
              {
                "label": "price",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "boosts",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "defenseTypes",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "craftTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "484c63bae335f405c4c94bf121b1fa88d131f1ef872c4da51a1996a8a23f2153": {
      "address": "0xA4853D4F3Ea7D4D14C749095dBE9c05cEB990931",
      "txHash": "0x860fcc19431d739faba95866f1a5d335c12a7879a2ee49b7d9a2764f47fedc55",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Antimatter",
            "src": "contracts/other/Antimatter.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bc2195c91e585aee8dca7f704b0f7077f5bcf320f7885122000d184d62533bda": {
      "address": "0x75fa37cF2884E0e447DA6860257a4a329E10987E",
      "txHash": "0x36b3520445f4e38e0f3d6c174188ee2b068d4b1552945e4340b4e02ad41ba834",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Aether",
            "src": "contracts/other/Aether.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "65cba0c538539fcdb40ca21747b121167d153714a4459dabc825bfeb6af66f27": {
      "address": "0x76341b875313A82829D75cACD2581412115B6283",
      "txHash": "0x5c8b441340b401c3e06cead6fcc108f40a2e7b03ca7d1aa85a74481eff0c450e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:31"
          },
          {
            "label": "planets",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(Planet)13196_storage)",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:33"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "Planets",
            "src": "contracts/other/Planets.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Planet)13196_storage)": {
            "label": "mapping(uint256 => struct Planets.Planet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Planet)13196_storage": {
            "label": "struct Planets.Planet",
            "members": [
              {
                "label": "coordinateX",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "coordinateY",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "antimatter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "metal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "crystal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "pvpEnabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "planetType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4edf32cdc6794149fcd2155cf5046335cfc1f5713e56a620cda217af7174be4a": {
      "address": "0x60801c6aA1892ac7040db250e1a9867225098157",
      "txHash": "0xe2679a1a603452f7a6374e21cd9444ae77bececbf8fb2421f61c824f102d2e9d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:11"
          },
          {
            "label": "SpaceShips",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(ShipType)13541_storage)",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:36"
          },
          {
            "label": "assignedPlanet",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:39"
          },
          {
            "label": "shipType",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_struct(ShipType)13541_storage)",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:42"
          },
          {
            "label": "shipModuleType",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_struct(ShipModule)13558_storage)",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:44"
          },
          {
            "label": "equippedShipModuleType",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(ShipModule)13558_storage))",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:47"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "257",
            "type": "t_string_storage",
            "contract": "Ships",
            "src": "contracts/other/Ships.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)3_storage": {
            "label": "uint256[3]",
            "numberOfBytes": "96"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(ShipModule)13558_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Ships.ShipModule))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ShipModule)13558_storage)": {
            "label": "mapping(uint256 => struct Ships.ShipModule)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ShipType)13541_storage)": {
            "label": "mapping(uint256 => struct Ships.ShipType)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ShipModule)13558_storage": {
            "label": "struct Ships.ShipModule",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "attackBoostStat",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "defenseBoostStat",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "healthBoostStat",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "price",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(ShipType)13541_storage": {
            "label": "struct Ships.ShipType",
            "members": [
              {
                "label": "shipType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "attack",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "attackTypes",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "defenseTypes",
                "type": "t_array(t_uint256)3_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "health",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "cargo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "craftTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "craftedFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "moduleSlots",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              }
            ],
            "numberOfBytes": "576"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "734b8db82374a8e10f4aab26d240fa1c240b2f9bcfc8379104c104ffabbe71b9": {
      "address": "0xc0415AE5745718d897E653EaF6E3b69B87F70Fd1",
      "txHash": "0x004b2654cce07ad04fde35eba7b7870a6953b151d92430da7176da4c989f517b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Metal",
            "src": "contracts\\other\\Metal.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0dabf0d9339618548005b10268df0b9b50fcf5bebb7fdc39e45d73656a55e70d": {
      "address": "0x390405620117e44de53679cb5584122945320540",
      "txHash": "0x00c6169cdd8f97b1859b9fea9202c6f4f695d0f7f8a91d0596d3fd86f7992cf4",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "gameDiamond",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Crystal",
            "src": "contracts\\other\\Crystal.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
